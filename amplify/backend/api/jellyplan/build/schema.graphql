
type Recipe @aws_iam @aws_api_key {
  id: ID!
  name: String!
  ingredients: AWSJSON
  instructions: AWSJSON
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
  _version: Int!
  _deleted: Boolean
  _lastChangedAt: AWSTimestamp!
}

type Preparation @aws_iam @aws_api_key {
  id: ID!
  type: String!
  duration: AWSJSON
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
  _version: Int!
  _deleted: Boolean
  _lastChangedAt: AWSTimestamp!
}

type MealComponent @aws_iam @aws_api_key {
  id: ID!
  name: String!
  tags: [String!]
  meals(filter: ModelMealMealComponentFilterInput, sortDirection: ModelSortDirection, limit: Int, nextToken: String): ModelMealMealComponentConnection
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
  _version: Int!
  _deleted: Boolean
  _lastChangedAt: AWSTimestamp!
}

enum Reaction {
  NEUTRAL
  LIKE
  DISLIKE
  FAVORITE
}

type Meal @aws_iam @aws_api_key {
  id: ID!
  title: String!
  tags: [String]
  isNew: Boolean
  hasLeftovers: Boolean
  reaction: Reaction
  isTakeOut: Boolean
  isOpenFreeform: Boolean
  isSpecialOccasion: Boolean
  MealComponents(filter: ModelMealMealComponentFilterInput, sortDirection: ModelSortDirection, limit: Int, nextToken: String): ModelMealMealComponentConnection
  dates(filter: ModelDateMealFilterInput, sortDirection: ModelSortDirection, limit: Int, nextToken: String): ModelDateMealConnection
  Recipe: Recipe
  Preparation: Preparation
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
  _version: Int!
  _deleted: Boolean
  _lastChangedAt: AWSTimestamp!
  mealRecipeId: ID
  mealPreparationId: ID
}

type Date @aws_iam @aws_api_key {
  id: ID!
  date: AWSDate
  Meals(filter: ModelDateMealFilterInput, sortDirection: ModelSortDirection, limit: Int, nextToken: String): ModelDateMealConnection
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
  _version: Int!
  _deleted: Boolean
  _lastChangedAt: AWSTimestamp!
}

type MealMealComponent @aws_iam @aws_api_key {
  id: ID!
  mealComponentID: ID!
  mealID: ID!
  mealComponent: MealComponent!
  meal: Meal!
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
  _version: Int!
  _deleted: Boolean
  _lastChangedAt: AWSTimestamp!
}

type DateMeal @aws_iam @aws_api_key {
  id: ID!
  mealID: ID!
  dateID: ID!
  meal: Meal!
  date: Date!
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
  _version: Int!
  _deleted: Boolean
  _lastChangedAt: AWSTimestamp!
}

input ModelStringInput {
  ne: String
  eq: String
  le: String
  lt: String
  ge: String
  gt: String
  contains: String
  notContains: String
  between: [String]
  beginsWith: String
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
  size: ModelSizeInput
}

input ModelIntInput {
  ne: Int
  eq: Int
  le: Int
  lt: Int
  ge: Int
  gt: Int
  between: [Int]
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
}

input ModelFloatInput {
  ne: Float
  eq: Float
  le: Float
  lt: Float
  ge: Float
  gt: Float
  between: [Float]
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
}

input ModelBooleanInput {
  ne: Boolean
  eq: Boolean
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
}

input ModelIDInput {
  ne: ID
  eq: ID
  le: ID
  lt: ID
  ge: ID
  gt: ID
  contains: ID
  notContains: ID
  between: [ID]
  beginsWith: ID
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
  size: ModelSizeInput
}

input ModelSubscriptionStringInput {
  ne: String
  eq: String
  le: String
  lt: String
  ge: String
  gt: String
  contains: String
  notContains: String
  between: [String]
  beginsWith: String
  in: [String]
  notIn: [String]
}

input ModelSubscriptionIntInput {
  ne: Int
  eq: Int
  le: Int
  lt: Int
  ge: Int
  gt: Int
  between: [Int]
  in: [Int]
  notIn: [Int]
}

input ModelSubscriptionFloatInput {
  ne: Float
  eq: Float
  le: Float
  lt: Float
  ge: Float
  gt: Float
  between: [Float]
  in: [Float]
  notIn: [Float]
}

input ModelSubscriptionBooleanInput {
  ne: Boolean
  eq: Boolean
}

input ModelSubscriptionIDInput {
  ne: ID
  eq: ID
  le: ID
  lt: ID
  ge: ID
  gt: ID
  contains: ID
  notContains: ID
  between: [ID]
  beginsWith: ID
  in: [ID]
  notIn: [ID]
}

enum ModelAttributeTypes {
  binary
  binarySet
  bool
  list
  map
  number
  numberSet
  string
  stringSet
  _null
}

input ModelSizeInput {
  ne: Int
  eq: Int
  le: Int
  lt: Int
  ge: Int
  gt: Int
  between: [Int]
}

enum ModelSortDirection {
  ASC
  DESC
}

type ModelRecipeConnection @aws_api_key @aws_iam {
  items: [Recipe]!
  nextToken: String
  startedAt: AWSTimestamp
}

input ModelRecipeFilterInput {
  id: ModelIDInput
  name: ModelStringInput
  ingredients: ModelStringInput
  instructions: ModelStringInput
  and: [ModelRecipeFilterInput]
  or: [ModelRecipeFilterInput]
  not: ModelRecipeFilterInput
}

type Query {
  getRecipe(id: ID!): Recipe @aws_api_key @aws_iam
  listRecipes(filter: ModelRecipeFilterInput, limit: Int, nextToken: String): ModelRecipeConnection @aws_api_key @aws_iam
  syncRecipes(filter: ModelRecipeFilterInput, limit: Int, nextToken: String, lastSync: AWSTimestamp): ModelRecipeConnection @aws_api_key @aws_iam
  getPreparation(id: ID!): Preparation @aws_api_key @aws_iam
  listPreparations(filter: ModelPreparationFilterInput, limit: Int, nextToken: String): ModelPreparationConnection @aws_api_key @aws_iam
  syncPreparations(filter: ModelPreparationFilterInput, limit: Int, nextToken: String, lastSync: AWSTimestamp): ModelPreparationConnection @aws_api_key @aws_iam
  getMealComponent(id: ID!): MealComponent @aws_api_key @aws_iam
  listMealComponents(filter: ModelMealComponentFilterInput, limit: Int, nextToken: String): ModelMealComponentConnection @aws_api_key @aws_iam
  syncMealComponents(filter: ModelMealComponentFilterInput, limit: Int, nextToken: String, lastSync: AWSTimestamp): ModelMealComponentConnection @aws_api_key @aws_iam
  getMeal(id: ID!): Meal @aws_api_key @aws_iam
  listMeals(filter: ModelMealFilterInput, limit: Int, nextToken: String): ModelMealConnection @aws_api_key @aws_iam
  syncMeals(filter: ModelMealFilterInput, limit: Int, nextToken: String, lastSync: AWSTimestamp): ModelMealConnection @aws_api_key @aws_iam
  getDate(id: ID!): Date @aws_api_key @aws_iam
  listDates(filter: ModelDateFilterInput, limit: Int, nextToken: String): ModelDateConnection @aws_api_key @aws_iam
  syncDates(filter: ModelDateFilterInput, limit: Int, nextToken: String, lastSync: AWSTimestamp): ModelDateConnection @aws_api_key @aws_iam
  getMealMealComponent(id: ID!): MealMealComponent @aws_api_key @aws_iam
  listMealMealComponents(filter: ModelMealMealComponentFilterInput, limit: Int, nextToken: String): ModelMealMealComponentConnection @aws_api_key @aws_iam
  syncMealMealComponents(filter: ModelMealMealComponentFilterInput, limit: Int, nextToken: String, lastSync: AWSTimestamp): ModelMealMealComponentConnection @aws_api_key @aws_iam
  getDateMeal(id: ID!): DateMeal @aws_api_key @aws_iam
  listDateMeals(filter: ModelDateMealFilterInput, limit: Int, nextToken: String): ModelDateMealConnection @aws_api_key @aws_iam
  syncDateMeals(filter: ModelDateMealFilterInput, limit: Int, nextToken: String, lastSync: AWSTimestamp): ModelDateMealConnection @aws_api_key @aws_iam
}

input ModelRecipeConditionInput {
  name: ModelStringInput
  ingredients: ModelStringInput
  instructions: ModelStringInput
  and: [ModelRecipeConditionInput]
  or: [ModelRecipeConditionInput]
  not: ModelRecipeConditionInput
}

input CreateRecipeInput {
  id: ID
  name: String!
  ingredients: AWSJSON
  instructions: AWSJSON
  _version: Int
}

input UpdateRecipeInput {
  id: ID!
  name: String
  ingredients: AWSJSON
  instructions: AWSJSON
  _version: Int
}

input DeleteRecipeInput {
  id: ID!
  _version: Int
}

type Mutation {
  createRecipe(input: CreateRecipeInput!, condition: ModelRecipeConditionInput): Recipe @aws_api_key @aws_iam
  updateRecipe(input: UpdateRecipeInput!, condition: ModelRecipeConditionInput): Recipe @aws_api_key @aws_iam
  deleteRecipe(input: DeleteRecipeInput!, condition: ModelRecipeConditionInput): Recipe @aws_api_key @aws_iam
  createPreparation(input: CreatePreparationInput!, condition: ModelPreparationConditionInput): Preparation @aws_api_key @aws_iam
  updatePreparation(input: UpdatePreparationInput!, condition: ModelPreparationConditionInput): Preparation @aws_api_key @aws_iam
  deletePreparation(input: DeletePreparationInput!, condition: ModelPreparationConditionInput): Preparation @aws_api_key @aws_iam
  createMealComponent(input: CreateMealComponentInput!, condition: ModelMealComponentConditionInput): MealComponent @aws_api_key @aws_iam
  updateMealComponent(input: UpdateMealComponentInput!, condition: ModelMealComponentConditionInput): MealComponent @aws_api_key @aws_iam
  deleteMealComponent(input: DeleteMealComponentInput!, condition: ModelMealComponentConditionInput): MealComponent @aws_api_key @aws_iam
  createMeal(input: CreateMealInput!, condition: ModelMealConditionInput): Meal @aws_api_key @aws_iam
  updateMeal(input: UpdateMealInput!, condition: ModelMealConditionInput): Meal @aws_api_key @aws_iam
  deleteMeal(input: DeleteMealInput!, condition: ModelMealConditionInput): Meal @aws_api_key @aws_iam
  createDate(input: CreateDateInput!, condition: ModelDateConditionInput): Date @aws_api_key @aws_iam
  updateDate(input: UpdateDateInput!, condition: ModelDateConditionInput): Date @aws_api_key @aws_iam
  deleteDate(input: DeleteDateInput!, condition: ModelDateConditionInput): Date @aws_api_key @aws_iam
  createMealMealComponent(input: CreateMealMealComponentInput!, condition: ModelMealMealComponentConditionInput): MealMealComponent @aws_api_key @aws_iam
  updateMealMealComponent(input: UpdateMealMealComponentInput!, condition: ModelMealMealComponentConditionInput): MealMealComponent @aws_api_key @aws_iam
  deleteMealMealComponent(input: DeleteMealMealComponentInput!, condition: ModelMealMealComponentConditionInput): MealMealComponent @aws_api_key @aws_iam
  createDateMeal(input: CreateDateMealInput!, condition: ModelDateMealConditionInput): DateMeal @aws_api_key @aws_iam
  updateDateMeal(input: UpdateDateMealInput!, condition: ModelDateMealConditionInput): DateMeal @aws_api_key @aws_iam
  deleteDateMeal(input: DeleteDateMealInput!, condition: ModelDateMealConditionInput): DateMeal @aws_api_key @aws_iam
}

input ModelSubscriptionRecipeFilterInput {
  id: ModelSubscriptionIDInput
  name: ModelSubscriptionStringInput
  ingredients: ModelSubscriptionStringInput
  instructions: ModelSubscriptionStringInput
  and: [ModelSubscriptionRecipeFilterInput]
  or: [ModelSubscriptionRecipeFilterInput]
}

type Subscription {
  onCreateRecipe: Recipe @aws_subscribe(mutations: ["createRecipe"]) @aws_api_key @aws_iam
  onUpdateRecipe: Recipe @aws_subscribe(mutations: ["updateRecipe"]) @aws_api_key @aws_iam
  onDeleteRecipe: Recipe @aws_subscribe(mutations: ["deleteRecipe"]) @aws_api_key @aws_iam
  onCreatePreparation: Preparation @aws_subscribe(mutations: ["createPreparation"]) @aws_api_key @aws_iam
  onUpdatePreparation: Preparation @aws_subscribe(mutations: ["updatePreparation"]) @aws_api_key @aws_iam
  onDeletePreparation: Preparation @aws_subscribe(mutations: ["deletePreparation"]) @aws_api_key @aws_iam
  onCreateMealComponent: MealComponent @aws_subscribe(mutations: ["createMealComponent"]) @aws_api_key @aws_iam
  onUpdateMealComponent: MealComponent @aws_subscribe(mutations: ["updateMealComponent"]) @aws_api_key @aws_iam
  onDeleteMealComponent: MealComponent @aws_subscribe(mutations: ["deleteMealComponent"]) @aws_api_key @aws_iam
  onCreateMeal: Meal @aws_subscribe(mutations: ["createMeal"]) @aws_api_key @aws_iam
  onUpdateMeal: Meal @aws_subscribe(mutations: ["updateMeal"]) @aws_api_key @aws_iam
  onDeleteMeal: Meal @aws_subscribe(mutations: ["deleteMeal"]) @aws_api_key @aws_iam
  onCreateDate: Date @aws_subscribe(mutations: ["createDate"]) @aws_api_key @aws_iam
  onUpdateDate: Date @aws_subscribe(mutations: ["updateDate"]) @aws_api_key @aws_iam
  onDeleteDate: Date @aws_subscribe(mutations: ["deleteDate"]) @aws_api_key @aws_iam
  onCreateMealMealComponent: MealMealComponent @aws_subscribe(mutations: ["createMealMealComponent"]) @aws_api_key @aws_iam
  onUpdateMealMealComponent: MealMealComponent @aws_subscribe(mutations: ["updateMealMealComponent"]) @aws_api_key @aws_iam
  onDeleteMealMealComponent: MealMealComponent @aws_subscribe(mutations: ["deleteMealMealComponent"]) @aws_api_key @aws_iam
  onCreateDateMeal: DateMeal @aws_subscribe(mutations: ["createDateMeal"]) @aws_api_key @aws_iam
  onUpdateDateMeal: DateMeal @aws_subscribe(mutations: ["updateDateMeal"]) @aws_api_key @aws_iam
  onDeleteDateMeal: DateMeal @aws_subscribe(mutations: ["deleteDateMeal"]) @aws_api_key @aws_iam
}

type ModelPreparationConnection @aws_api_key @aws_iam {
  items: [Preparation]!
  nextToken: String
  startedAt: AWSTimestamp
}

input ModelPreparationFilterInput {
  id: ModelIDInput
  type: ModelStringInput
  duration: ModelStringInput
  and: [ModelPreparationFilterInput]
  or: [ModelPreparationFilterInput]
  not: ModelPreparationFilterInput
}

input ModelPreparationConditionInput {
  type: ModelStringInput
  duration: ModelStringInput
  and: [ModelPreparationConditionInput]
  or: [ModelPreparationConditionInput]
  not: ModelPreparationConditionInput
}

input CreatePreparationInput {
  id: ID
  type: String!
  duration: AWSJSON
  _version: Int
}

input UpdatePreparationInput {
  id: ID!
  type: String
  duration: AWSJSON
  _version: Int
}

input DeletePreparationInput {
  id: ID!
  _version: Int
}

input ModelSubscriptionPreparationFilterInput {
  id: ModelSubscriptionIDInput
  type: ModelSubscriptionStringInput
  duration: ModelSubscriptionStringInput
  and: [ModelSubscriptionPreparationFilterInput]
  or: [ModelSubscriptionPreparationFilterInput]
}

type ModelMealComponentConnection @aws_api_key @aws_iam {
  items: [MealComponent]!
  nextToken: String
  startedAt: AWSTimestamp
}

input ModelMealComponentFilterInput {
  id: ModelIDInput
  name: ModelStringInput
  tags: ModelStringInput
  and: [ModelMealComponentFilterInput]
  or: [ModelMealComponentFilterInput]
  not: ModelMealComponentFilterInput
}

input ModelMealComponentConditionInput {
  name: ModelStringInput
  tags: ModelStringInput
  and: [ModelMealComponentConditionInput]
  or: [ModelMealComponentConditionInput]
  not: ModelMealComponentConditionInput
}

input CreateMealComponentInput {
  id: ID
  name: String!
  tags: [String!]
  _version: Int
}

input UpdateMealComponentInput {
  id: ID!
  name: String
  tags: [String!]
  _version: Int
}

input DeleteMealComponentInput {
  id: ID!
  _version: Int
}

input ModelSubscriptionMealComponentFilterInput {
  id: ModelSubscriptionIDInput
  name: ModelSubscriptionStringInput
  tags: ModelSubscriptionStringInput
  and: [ModelSubscriptionMealComponentFilterInput]
  or: [ModelSubscriptionMealComponentFilterInput]
}

type ModelMealConnection @aws_api_key @aws_iam {
  items: [Meal]!
  nextToken: String
  startedAt: AWSTimestamp
}

input ModelReactionInput {
  eq: Reaction
  ne: Reaction
}

input ModelMealFilterInput {
  id: ModelIDInput
  title: ModelStringInput
  tags: ModelStringInput
  isNew: ModelBooleanInput
  hasLeftovers: ModelBooleanInput
  reaction: ModelReactionInput
  isTakeOut: ModelBooleanInput
  isOpenFreeform: ModelBooleanInput
  isSpecialOccasion: ModelBooleanInput
  and: [ModelMealFilterInput]
  or: [ModelMealFilterInput]
  not: ModelMealFilterInput
  mealRecipeId: ModelIDInput
  mealPreparationId: ModelIDInput
}

input ModelMealConditionInput {
  title: ModelStringInput
  tags: ModelStringInput
  isNew: ModelBooleanInput
  hasLeftovers: ModelBooleanInput
  reaction: ModelReactionInput
  isTakeOut: ModelBooleanInput
  isOpenFreeform: ModelBooleanInput
  isSpecialOccasion: ModelBooleanInput
  and: [ModelMealConditionInput]
  or: [ModelMealConditionInput]
  not: ModelMealConditionInput
  mealRecipeId: ModelIDInput
  mealPreparationId: ModelIDInput
}

input CreateMealInput {
  id: ID
  title: String!
  tags: [String]
  isNew: Boolean
  hasLeftovers: Boolean
  reaction: Reaction
  isTakeOut: Boolean
  isOpenFreeform: Boolean
  isSpecialOccasion: Boolean
  _version: Int
  mealRecipeId: ID
  mealPreparationId: ID
}

input UpdateMealInput {
  id: ID!
  title: String
  tags: [String]
  isNew: Boolean
  hasLeftovers: Boolean
  reaction: Reaction
  isTakeOut: Boolean
  isOpenFreeform: Boolean
  isSpecialOccasion: Boolean
  _version: Int
  mealRecipeId: ID
  mealPreparationId: ID
}

input DeleteMealInput {
  id: ID!
  _version: Int
}

input ModelSubscriptionMealFilterInput {
  id: ModelSubscriptionIDInput
  title: ModelSubscriptionStringInput
  tags: ModelSubscriptionStringInput
  isNew: ModelSubscriptionBooleanInput
  hasLeftovers: ModelSubscriptionBooleanInput
  reaction: ModelSubscriptionStringInput
  isTakeOut: ModelSubscriptionBooleanInput
  isOpenFreeform: ModelSubscriptionBooleanInput
  isSpecialOccasion: ModelSubscriptionBooleanInput
  and: [ModelSubscriptionMealFilterInput]
  or: [ModelSubscriptionMealFilterInput]
}

type ModelDateConnection @aws_api_key @aws_iam {
  items: [Date]!
  nextToken: String
  startedAt: AWSTimestamp
}

input ModelDateFilterInput {
  id: ModelIDInput
  date: ModelStringInput
  and: [ModelDateFilterInput]
  or: [ModelDateFilterInput]
  not: ModelDateFilterInput
}

input ModelDateConditionInput {
  date: ModelStringInput
  and: [ModelDateConditionInput]
  or: [ModelDateConditionInput]
  not: ModelDateConditionInput
}

input CreateDateInput {
  id: ID
  date: AWSDate
  _version: Int
}

input UpdateDateInput {
  id: ID!
  date: AWSDate
  _version: Int
}

input DeleteDateInput {
  id: ID!
  _version: Int
}

input ModelSubscriptionDateFilterInput {
  id: ModelSubscriptionIDInput
  date: ModelSubscriptionStringInput
  and: [ModelSubscriptionDateFilterInput]
  or: [ModelSubscriptionDateFilterInput]
}

type ModelMealMealComponentConnection @aws_iam @aws_api_key {
  items: [MealMealComponent]!
  nextToken: String
  startedAt: AWSTimestamp
}

input ModelMealMealComponentFilterInput {
  id: ModelIDInput
  mealComponentID: ModelIDInput
  mealID: ModelIDInput
  and: [ModelMealMealComponentFilterInput]
  or: [ModelMealMealComponentFilterInput]
  not: ModelMealMealComponentFilterInput
}

input ModelMealMealComponentConditionInput {
  mealComponentID: ModelIDInput
  mealID: ModelIDInput
  and: [ModelMealMealComponentConditionInput]
  or: [ModelMealMealComponentConditionInput]
  not: ModelMealMealComponentConditionInput
}

input CreateMealMealComponentInput {
  id: ID
  mealComponentID: ID!
  mealID: ID!
  _version: Int
}

input UpdateMealMealComponentInput {
  id: ID!
  mealComponentID: ID
  mealID: ID
  _version: Int
}

input DeleteMealMealComponentInput {
  id: ID!
  _version: Int
}

input ModelSubscriptionMealMealComponentFilterInput {
  id: ModelSubscriptionIDInput
  mealComponentID: ModelSubscriptionIDInput
  mealID: ModelSubscriptionIDInput
  and: [ModelSubscriptionMealMealComponentFilterInput]
  or: [ModelSubscriptionMealMealComponentFilterInput]
}

type ModelDateMealConnection @aws_iam @aws_api_key {
  items: [DateMeal]!
  nextToken: String
  startedAt: AWSTimestamp
}

input ModelDateMealFilterInput {
  id: ModelIDInput
  mealID: ModelIDInput
  dateID: ModelIDInput
  and: [ModelDateMealFilterInput]
  or: [ModelDateMealFilterInput]
  not: ModelDateMealFilterInput
}

input ModelDateMealConditionInput {
  mealID: ModelIDInput
  dateID: ModelIDInput
  and: [ModelDateMealConditionInput]
  or: [ModelDateMealConditionInput]
  not: ModelDateMealConditionInput
}

input CreateDateMealInput {
  id: ID
  mealID: ID!
  dateID: ID!
  _version: Int
}

input UpdateDateMealInput {
  id: ID!
  mealID: ID
  dateID: ID
  _version: Int
}

input DeleteDateMealInput {
  id: ID!
  _version: Int
}

input ModelSubscriptionDateMealFilterInput {
  id: ModelSubscriptionIDInput
  mealID: ModelSubscriptionIDInput
  dateID: ModelSubscriptionIDInput
  and: [ModelSubscriptionDateMealFilterInput]
  or: [ModelSubscriptionDateMealFilterInput]
}

