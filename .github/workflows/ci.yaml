name: Continuous Integration

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: us-east-1
      AWS_DEFAULT_OUTPUT: json
      APP_NAME: mealcal
      DEPLOY_BRANCH: main

    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Node ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - uses: pnpm/action-setup@v2.0.1
        name: Install pnpm
        id: pnpm-install
        with:
          version: 7
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        run: |
          echo "::set-output name=pnpm_cache_dir::$(pnpm store path)"

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      - name: Lint
        run: pnpm lint

      - name: Build
        run: pnpm build

      - name: Deploy
        run: |        
          echo "Deploy app $APP_NAME branch $DEPLOY_BRANCH"
          JOB_ID=$(aws amplify start-job --app-id $APP_NAME --branch-name $DEPLOY_BRANCH --job-type RELEASE | jq -r '.jobSummary.jobId')
          echo "Release started"
          echo "Job ID is $JOB_ID"
          
          while [[ "$(aws amplify get-job --app-id $APP_NAME --branch-name $DEPLOY_BRANCH --job-id $JOB_ID | jq -r '.job.summary.status')" =~ ^(PENDING|RUNNING)$ ]]; do sleep 1; done
          JOB_STATUS="$(aws amplify get-job --app-id $APP_NAME --branch-name $DEPLOY_BRANCH --job-id $JOB_ID | jq -r '.job.summary.status')"
          echo "Job finished"
          echo "Job status is $JOB_STATUS"