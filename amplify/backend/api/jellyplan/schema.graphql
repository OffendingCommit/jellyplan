type Recipe @model @auth(rules: [{allow: public}]) {
  id: ID!
  name: String!
  ingredients: AWSJSON
  instructions: AWSJSON
}

type Preparation @model @auth(rules: [{allow: public}]) {
  id: ID!
  type: String!
  duration: AWSJSON
}

type MealComponent @model @auth(rules: [{allow: public}]) {
  id: ID!
  name: String!
  tags: [String!]
  meals: [Meal] @manyToMany(relationName: "MealMealComponent")
}

enum Reaction {
  NEUTRAL
  LIKE
  DISLIKE
  FAVORITE
}

type Meal @model @auth(rules: [{allow: public}]) {
  id: ID!
  title: String!
  tags: [String]
  isNew: Boolean
  hasLeftovers: Boolean
  reaction: Reaction
  isTakeOut: Boolean
  isOpenFreeform: Boolean
  isSpecialOccasion: Boolean
  MealComponents: [MealComponent] @manyToMany(relationName: "MealMealComponent")
  dates: [Date] @manyToMany(relationName: "DateMeal")
  Recipe: Recipe @hasOne
  Preparation: Preparation @hasOne
}

type Date @model @auth(rules: [{allow: public}]) {
  id: ID!
  date: AWSDate
  Meals: [Meal] @manyToMany(relationName: "DateMeal")
}
